<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilistOpt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilistOpt.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACQ
        EwAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGSoAAgkBCAELAToBNwEqAUYBZgFcATUBegGIAXcBMgGiAZABfAEwAasBdQFo
        ATQBjQFOAUgBMQFeAhgBFgEeMAABJgElAR8BLgFoAV0BNQF8AaYBiwEnAcMBxAGgARUB5wHKAaQBEQHt
        AbYBlgEfAdUBgwFzATMBnAFCAT4BLQFPAggBBwEKLAACCQEIAQsBOgE3ASoBRgFmAVwBNQF6AYgBdwEy
        AaIBkAF8ATABqwF1AWgBNAGNAU4BSAExAV4CGAEWAR54AAMJAQwBTQFHATEBXAHAAZ4BFwHjAcUBoQEU
        AegBsgGVAR8B0wGXAYEBLgGzAZABfAEvAasBpwGOASUBxwG9AZsBGgHeAdUBqwEIAfkBgQFwATMBmQIY
        ARUBHiAAAhkBFgEfAYkBdwExAaMBzgGoAQ0B8wG2AZYBHgHWAYgBdgExAaIBYgFZATUBdQFaAVIBNAFs
        AXYBaQE1AYwBpgGMASYBxQHGAaIBEwHqAbkBmgEcAdoBMgEvASYBPAMEAQYcAAMJAQwBTQFHATEBXAHA
        AZ4BFwHjAcUBoQEUAegBsgGVAR8B0wGXAYEBLgGzAZABfAEvAasBpwGOASUBxwG9AZsBGgHeAdUBqwEI
        AfkBgQFwATMBmQIYARUBHmwAAgsBCgEOAZ8BhwEqAbwB2gGuAQMB/wFYAVABMwFpARgBFwEVAR0DBgEI
        CAADAwEEAg8BDgETATABLQElAToBogGKAScBwgHFAaIBFAHpAUIBPgEtAVAYAAE2ATMBKAFBAcMBoAEW
        AeYBsQGUASAB0QExAS8BJgE8AwoBDQMAAQEMAAMEAQUCGAEWAR4BcwFmATUBiQHUAaoBBwH6AXYBaQE1
        AYwYAAILAQoBDgGfAYcBKgG8AdoBrgEDAf8BWAFQATMBaQEYARcBFQEdAwYBCAgAAwMBBAIPAQ4BEwEw
        AS0BJQE6AaIBigEnAcIBxQGiARQB6QFCAT4BLQFQZAABEgERARABFgGwAZIBIQHPAaEBiQEpAb8CGAEW
        AR4gAAIJAQgBCwFsAWEBNQGAAcYBogETAeoBRwFCAS8BVQMAAQEMAAEsASoBIgE1AckBowESAewBgQFw
        ATMBmSgAAUIBPgEtAU8BxAGhARUB5wF2AWkBNAGNAwQBBgwAARIBEQEQARYBrgGSASEBzwGiAYkBKAHA
        AhgBFgEeIAACCQEIAQsBbAFhATUBgAHGAaIBEwHqAUcBQgEvAVUDAAEBXAABlgGBAS0BsQG6AZkBHAHb
        AwQBBhAAAgsBCgEOAhMBEgEYAwMBBBAAAWgBXQE1AXwBygGjARAB7gEcARsBGAEiCAADBgEIAcgBowES
        AewBiAF2ATIBoTAAAUABPAEsAU0B1gGrAQYB+wE0ATEBJwE/DAABlgGBAS0BsQG6AZkBHAHbAwQBBiwA
        AWgBXQE1AXwBygGjARAB7gEcARsBGAEiWAABSQFEATABWAHKAaQBEQHtASUBJAEeAS0UAAF+AW8BMwGX
        AdUBrAEFAfwBIwEiAR0BKxAAAwQBBgGWAYEBLgGyAZQBfwEuAbAIAAFtAWIBNQGCAb4BnQEYAeEBEgER
        ARABFggAAwQBBgFPAUkBMgFfAwUBBwwAAhQBEgEZATcBNAEoAUIMAAFsAWEBNQGBAb0BmwEZAd8CCQEI
        AQsEAAFJAUQBMAFYAcoBpAERAe0BJQEkAR4BLQgAAg0BDAEQAwABASAAAwQBBgGWAYEBLgGyAZQBfwEu
        AbBYAAGYAYIBLQG0AY4BewExAagDAAEBFAABgQFwATMBmQHaAa4BAwH/ASMBIgEdASsUAAEiASEBHQEq
        Ac8BpwELAfUBJwElAR8BLwQAAa4BkgEhAc8BZgFcATUBegwAAXUBaAE1AYwB1gGsAQUB/AFiAVkBNQF1
        AwQBBgQAAhQBEgEZAbMBlgEfAdQB2AGtAQUB/QEoAScBIAExCAABGAEXARUBHQHEAaABFAHpAUgBQwEv
        AVcEAAGYAYIBLQG0AY4BewExAagDAAEBCAABnAGEASsBugEYARcBFQMdARkBJAMBAQIcAAEiASEBHQEq
        Ac8BpwELAfUBJwElAR8BL1QAAcIBngEXAeQBKgEoASIBMxgAAYABcAEzAZgB2gGuAQMB/wEjASIBHQEr
        FAACCQEIAQsBtgGWAR4B1gFkAVsBNQF3ASgBJwEgATEBygGjARAB7gIMAQsBDwwAAR4BHQEaASUBwAGe
        ARcB4wHWAawBBQH8AW8BYwE2AYQEAAGsAZEBJQHLAdcBrAEFAf0BZwFdATUBewMGAQgIAAMBAQIBoAGI
        ASoBvQGOAXsBMQGoBAABwgGeARcB5AEqASgBIgEzDAACDQEMARABYwFZATUBdgHLAaUBDwHwAV0BVQE0
        AXAcAAIJAQgBCwG2AZYBHgHWAWQBWwE1AXdQAAE2ATMBKAFBAcQBoAEWAeYDAQECCAABKgEoASIBMwE+
        AToBKwFKAT4BOgErAUoBPQE6ASsBSgGXAYEBLAGzAdoBrgEDAf8BVgFOATMBZgE+AToBKwFKAT4BOgEr
        AUoBOAE1ASkBRAwAAY4BfAEwAakBmQGDAS0BtQGNAXoBMAGnAawBkQEjAcsUAAIdARkBJAG3AZcBHQHY
        AdMBqQEJAfgBtwGYAR4B1wHVAasBBwH6AXcBagE1AY4DBQEHEAABagFfATUBfgHAAZ4BFwHjATYBMwEo
        AUEBxAGgARYB5gMBAQIMAAEOAg0BEQGyAZQBHwHSAdoBrgEDAf8B0gGpAQoB9wFbAVMBNAFsAwQBBhgA
        AY4BewExAagBmQGDAS0BtVAAAWcBXQE1AXsBsQGTASAB0QwAAZ8BhwEqAbwB2gGuAQMB/wHaAa4BAwH/
        AdoBrgEDAf8B2gGuAQMB/wHaAa4BAwH/AdoBrgEDAf8B2gGuAQMB/wHaAa4BAwH/AcoBowEQAe4MAAFx
        AWUBNQGHAbEBlAEgAdEBxQGiARQB6QGWAYEBLwGxGAACDwEOARMB1QGpAQkB+AHaAa4BAwH/AYUBdAEy
        AZ4YAAFMAUYBMQFbAdgBrAEEAf4BZwFdATUBewGyAZMBHwHSFAACEQEPARUBvgGdARkB4QHaAa4BAwH/
        AdoBrgEDAf8BZAFbATUBeBgAAXEBZQE1AYcBsQGUASAB0VAAAVoBUwE0AWwBtwGXAR0B2AwAATsBOAEq
        AUcBWAFQATMBaQFYAVABMwFpAVcBUAEzAWgBpgGLAScBwwHaAa4BAwH/AWwBYQE1AYEBWAFQATMBaQFY
        AVABMwFpAU8BSQEyAV8MAAF5AWsBNAGQAawBkAEjAcsBtwGXAR0B2AGbAYQBLQG3FAACEQEQARUBpwGM
        ASUBxgHVAasBBwH6AcYBogESAeoB0gGpAQoB9wFrAWEBNQGBAwQBBRAAAVMBTAEzAWQB0gGqAQoB9wFa
        AVMBNAFsAbcBlwEdAdgYAAIZARYBHwGkAYoBJwHCAdoBrgEDAf8B1QGqAQYB+wF5AWsBNAGQAwQBBRAA
        AXkBawE0AZABrAGQASMBy1AAAR8BHgEbASYByQGjARMB6wIIAQcBChgAAX4BbwEzAZcB2gGuAQMB/wEi
        ASEBHQEqFwABAQGcAYYBKwG6AYkBdwEyAaMBbQFiATUBggG3AZcBHQHYAwABAQwAARMBEgERARcBrAGR
        ASMBywHYAawBBAH+AXkBbAE1AZADCgENAboBmQEbAdwB1gGrAQYB+wFbAVMBNAFtAwQBBgwAAXoBbAE0
        AZEBsgGVASAB0wEfAR4BGwEmAckBowETAesCCAEHAQoYAAIUARIBGQG2AZgBHgHXAdMBqgEKAfcBeQFr
        ATUBkAFFAUABLwFTAwQBBgsAAQEBnAGGASsBugGJAXcBMgGjVAABtgGXAR4B1wFIAUMBMAFWGAABgQFw
        ATMBmQHaAa4BAwH/ASMBIgEdASsUAAIQAQ8BFAG+AZ0BGgHgAVIBTAEyAWMCDAELAQ8BxgGiARMB6gEi
        ASABHAEpDAABhAF0ATIBngHYAawBBAH+AW8BZAE1AYUDBgEIBAABIgEgARwBKQHGAaIBEwHpAdYBqgEG
        AfsBJQEkAR4BLQgAAwcBCQGwAZIBIQHPAXUBaAE1AYsEAAG2AZcBHgHXAUkBQwEwAVccAAILAQoBDgE8
        ATgBKwFIAZQBfwEvAa8B1QGsAQUB/AE2ATMBKAFBCAACEAEPARQBvgGdARoB4AFSAUwBMgFjVAABggFx
        ATMBmgGoAY4BJQHIAwcBCRQAAYIBcQEzAZoB2gGuAQMB/wEkASMBHgEsFAABQAE8ASwBTQHKAaMBEAHu
        AhMBEgEYBAABnAGGASsBugGMAXkBMQGmAwIBAwgAAhABDwEUAWIBWQE1AXUDBgEIDAABHwEeARsBJgE4
        ATUBKQFEDAABKQEoASEBMgHOAagBDQHzAS4BLAEkATgEAAGCAXEBMwGaAagBjgElAcgDBwEJHAADCgEN
        AYQBdAEyAZ4BgQFwATMBmQMKAQ0IAAFAATwBLAFNAcoBowEQAe4CEwESARhUAAEiASEBHQEqAdYBrAEF
        AfwBOwE4ASoBRxQAASQBIwEeASwBPQE6ASsBSgMJAQwQAAMKAQ0BzQGmAQ8B8QFgAVgBNQF0CAABTAFG
        ATEBWwHOAagBDQHzASABHwEbASc0AAGnAY4BJQHGAZoBhAEsAbYIAAEiASEBHQEqAdYBrAEFAfwBOwE4
        ASoBRzAAAwoBDQHNAaYBDwHxAWABWAE1AXRcAAFXAVABMwFpAcYBogETAeoBOgE3ASoBRigAAwEBAgGZ
        AYIBLAG2AawBkQEiAc0CDQEMARAIAAMDAQQBiAF2ATIBoQG2AZgBHgHXAR8BHgEbASYsAAF5AWsBNQGP
        AcYBogETAekBHgEdARoBJQwAAVcBUAEzAWkBxgGiARMB6gE6ATcBKgFGKAADAQECAZkBggEsAbYBrAGR
        ASIBzQINAQwBEFwAAwQBBQGDAXMBMwGbAcYBogEUAekBRQFAAS8BUwMJAQwYAAMBAQIBJQEkAR4BLQGy
        AZQBHwHSAbYBlgEeAdYCEwESARgQAAIOAQ0BEgGnAYwBJwHGAbcBlgEeAdYBHwEeARsBJgMDAQQcAAIQ
        AQ8BFAF8AW4BNAGUAcoBpAEPAe8BQAE8AS0BTRAAAwQBBQGDAXMBMwGbAcYBogEUAekBRQFAAS8BUwMJ
        AQwYAAMBAQIBJQEkAR4BLQGyAZQBHwHSAbYBlgEeAdYCEwESARhkAAMEAQUBUQFLATIBYQHYAawBBAH+
        AbABkgEhAc8BWAFQATMBaQITARIBGAgAAwcBCQE2ATMBKAFBAZIBfwEvAa4BygGjARAB7gGWAX8BLQGx
        AhQBEgEZGAACDgENARIBiAF3ATEBogHPAaYBDgHyAYwBeQExAaYBIwEiAR0BKwMAAQEMAAILAQoBDgFf
        AVcBNAFyAb4BnQEaAeABywGlAQ8B8AEzATEBJwE+GAADBAEFAVEBSgEyAWAB2AGsAQQB/gGwAZIBIQHP
        AVgBUAEzAWkCEwESARgIAAMHAQkBNgEzASgBQQGSAX8BLwGuAcoBowEQAe4BlgF/AS0BsQIUARIBGXAA
        Ah0BGQEkAXoBbAE1AZEBrAGQASMBzAHJAaIBEwHrAcABngEXAeMBvQGbARoB3gHGAaIBEwHqAboBmQEb
        AdwBlAF/AS4BsAFEAUABLgFSJAADBAEFAUwBRgExAVsBnQGHASsBuwHFAaIBFAHpAbcBlwEdAdgBmwGE
        AS0BtwGTAX8BLwGvAasBkAEkAckBxgGiARMB6gGxAZQBIAHRAXQBZwE1AYoCDAELAQ8kAAIdARkBJAF6
        AWwBNQGRAawBkAEjAcwByQGiARMB6wHAAZ4BFwHjAb0BmwEaAd4BxgGiARMB6gG6AZkBGwHcAZQBfwEu
        AbABRAFAAS4BUoQAAgsBCgEOATYBNAEoAUIBQwE/AS4BUQEcARsBGAEiPAACCwEKAQ4BbwFiATUBgwG5
        AZkBHAHbAcoBpAEPAe8BkwF/AS4BrgEwAS4BJQE6PAACCwEKAQ4BNgE0ASgBQgFDAT8BLgFRARwBGwEY
        ASJwAAFCAU0BPgcAAT4DAAEoAwABUAMAARQDAAEBAQABAQUAAfAXAAP/AQAB/AEDAf8BwAEfAfwBAwHw
        BAAB8AEAAf8BAAEHAfABAAHwBAAB4AFgAX4CBwHgAWABcAQAAcMB/AEcAX8B4QHDAfwBEAQAAccBjwEY
        Af8B8QHHAf8BEAQAAo8BGAHHATgBjAH/ARAEAAKPAYkBwgEYAYwBPwGABAABnwGPAYEBwgEYAZwBPwGA
        BAABGAEBAcMB4AE8ARwBDwHABAABOAEBAcMB8AH8AT4BDwHABAABOAEBAcMB4AE8AT8BAwHABAABHwGP
        AYEBwAEcAR8BgQGABAABnwGPAYEBwgEYAZ8BwQGABAACjwGIAccBOAGPAeEBgAQAAo8BGAH/AfkBjwH/
        ARAEAAHHAf4BGAF/AfEBxwH+ARAEAAHBAfgBPAEfAcMBwQH4ATAEAAHgAWABfgIHAeABYAFwBAAB+AEB
        Af8BAAEPAfgBAQHwBAAB/wEPAf8B4AF/Af8BDwHwBAAL
</value>
  </data>
</root>