<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilistOpt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilistOpt.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAu
        EQAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGSoAAwgBCwMtAkYBRQFDAXoBWgFYAUsBogFgAVwBTQGrAU8BTQFIAY0COQE4
        AV4DFgEeMAADIAEuAkYBRAF8AXQBawFJAcMBpAGMAS4B5wGwAZIBJQHtAYkBeQFAAdUBVwFVAUsBnAIy
        ATEBTwMHAQosAAMIAQsDLQJGAUUBQwF6AVoBWAFLAaIBYAFcAU0BqwFPAU0BSAGNAjkBOAFeAxYBHngA
        AwkBDAM4AVwBnAGIATIB4wGlAY0BKgHoAYMBdwE/AdMBZgFhAUwBswFgAVwBTQGrAXcBbQFFAccBlgGC
        ATcB3gHKAaQBEAH5AVUBUgFKAZkDFgEeIAADFgEfAVsBVwFLAaMBugGaARkB8wGLAXoBPQHWAVoBVwFL
        AaICQwFBAXUCPwE+AWwBTgFNAUgBjAF1AW0BSAHFAagBjwEpAeoBjwGAAToB2gMoATwDBAEGHAADCQEM
        AzgBXAGcAYgBMgHjAaUBjQEqAegBgwF3AT8B0wFmAWEBTAGzAWABXAFNAasBdwFtAUUBxwGWAYIBNwHe
        AcoBpAEQAfkBVQFSAUoBmQMWAR5sAAMKAQ4BbQFmAUoBvAHaAa4BAQH/AT4CPQFpAxUBHQMGAQgIAAMD
        AQQDDgETAycBOgFyAWoBSAHCAaYBjgEoAekDMgFQGAADKgFBAaMBiwEvAeYBggF2AUEB0QMoATwDCgEN
        AwABAQwAAwQBBQMWAR4BTQFMAUgBiQHMAaUBDQH6AU4BTQFIAYwYAAMKAQ4BbQFmAUoBvAHaAa4BAQH/
        AT4CPQFpAxUBHQMGAQgIAAMDAQQDDgETAycBOgFyAWoBSAHCAaYBjgEoAekDMgFQZAADEAEWAYEBdgFD
        Ac8BcAFpAUkBvwMWAR4gAAMIAQsBSQFIAUUBgAGoAY8BKQHqAjUBNAFVAwABAQwAAyQBNQGtAZMBKAHs
        AVUBUgFKAZkoAAIyATEBTwGkAY0BLgHnAU8BTQFIAY0DBAEGDAADEAEWAYEBdgFDAc8BcgFpAUgBwAMW
        AR4gAAMIAQsBSQFIAUUBgAGoAY8BKQHqAjUBNAFVAwABAVwAAWUBYAFMAbEBkgGAATsB2wMEAQYQAAMK
        AQ4DEgEYAwMBBBAAAkYBRAF8AbABkwEiAe4DGAEiCAADBgEIAawBkwEoAewBWQFYAUwBoTAAAjEBMAFN
        Ac4BowEKAfsDKQE/DAABZQFgAUwBsQGSAYABOwHbAwQBBiwAAkYBRAF8AbABkwEiAe4DGAEiWAACNgE1
        AVgBsAGSASUB7QMfAS0UAAFUAVIBSgGXAc4BpwEHAfwDHgErEAADBAEGAWYBYQFLAbIBYwFeAUwBsAgA
        AkkBRgGCAZkBhwEzAeEDEAEWCAADBAEGAzkBXwMFAQcMAAMSARkDKwFCDAABSQFIAUUBgQGUAYEBNgHf
        AwgBCwQAAjYBNQFYAbABkgElAe0DHwEtCAADDAEQAwABASAAAwQBBgFmAWEBSwGyAWMBXgFMAbBYAAFm
        AWEBTAG0AV8BWwFMAagDAAEBFAABVQFSAUoBmQHaAa4BAQH/Ax4BKxQAAx0BKgG+AZsBFgH1AyABLwQA
        AYEBdgFDAc8BRgFFAUMBegwAAU4BTQFIAYwBzgGnAQcB/AJDAUEBdQMEAQYEAAMSARkBhwF6AUAB1AHS
        AasBBwH9AiIBIQExCAADFQEdAaYBjAEoAekCNgE1AVcEAAFmAWEBTAG0AV8BWwFMAagDAAEBCAABawFk
        AUoBugMVAR0DGgEkAwEBAhwAAx0BKgG+AZsBFgH1AyABL1QAAZ8BiAExAeQDIwEzGAABVAFTAUoBmAHa
        Aa4BAQH/Ax4BKxQAAwgBCwGLAXoBPQHWAUUBRAFCAXcCIgEhATEBsAGTASIB7gMLAQ8MAAMaASUBnAGI
        ATIB4wHOAacBBwH8AkoBRwGEBAABfQFyAUUBywHRAaoBBwH9AkYBQwF7AwYBCAgAAwEBAgFwAWcBSgG9
        AV8BWwFMAagEAAGfAYgBMQHkAyMBMwwAAwwBEAFEAUMBQgF2AbQBlgEfAfACQQE/AXAcAAMIAQsBiwF6
        AT0B1gFFAUQBQgF3UAADKgFBAaQBiwEvAeYDAQECCAADIwEzAy8BSgMvAUoDLwFKAWYBYQFMAbMB2gGu
        AQEB/wE9AjwBZgMvAUoDLwFKAywBRAwAAV8BWwFLAakBZwFiAUoBtQFeAVoBTAGnAX0BcgFFAcsUAAMa
        ASQBjAF8AT0B2AHFAaABEwH4AYsBfAE9AdcBzAGmAQ0B+gFQAU4BSQGOAwUBBxAAAUgBRwFEAX4BnAGI
        ATIB4wMqAUEBpAGLAS8B5gMBAQIMAAMNAREBhAF3AT8B0gHaAa4BAQH/AcQBogEVAfcBQAE/AT4BbAME
        AQYYAAFfAVsBTAGoAWcBYgFKAbVQAAJGAUMBewGCAXYBQQHRDAABbQFmAUoBvAHaAa4BAQH/AdoBrgEB
        Af8B2gGuAQEB/wHaAa4BAQH/AdoBrgEBAf8B2gGuAQEB/wHaAa4BAQH/AdoBrgEBAf8BsAGTASIB7gwA
        AUsBSgFHAYcBggF2AUEB0QGmAY4BKAHpAWUBYAFNAbEYAAMOARMBxwGgARMB+AHaAa4BAQH/AVgBVQFL
        AZ4YAAE4AjcBWwHUAagBBAH+AkYBQwF7AYQBdQE/AdIUAAMQARUBmQGHATMB4QHaAa4BAQH/AdoBrgEB
        Af8BRQFEAUMBeBgAAUsBSgFHAYcBggF2AUEB0VAAAj8BPgFsAYwBfAE9AdgMAAMuAUcBPgI9AWkBPgI9
        AWkBPgE9ATwBaAF0AWsBSQHDAdoBrgEBAf8BSQFIAUUBgQE+Aj0BaQE+Aj0BaQM5AV8MAAFRAU8BSQGQ
        AX0BcgFFAcsBjAF8AT0B2AFqAWQBTAG3FAADEAEVAXcBbQFGAcYBzAGmAQ0B+gGoAY8BKQHqAcQBogEV
        AfcBSQFIAUUBgQMEAQUQAAE8AjsBZAHEAaMBFQH3Aj8BPgFsAYwBfAE9AdgYAAMWAR8BcgFqAUgBwgHa
        Aa4BAQH/Ac0BogEKAfsBUQFPAUkBkAMEAQUQAAFRAU8BSQGQAX0BcgFFActQAAMbASYBrAGRASoB6wMH
        AQoYAAFUAVIBSgGXAdoBrgEBAf8DHQEqFwABAQFrAWUBSgG6AVsBVwFLAaMCSQFGAYIBjAF8AT0B2AMA
        AQEMAAMRARcBfQFyAUUBywHUAagBBAH+AVEBTwFJAZADCgENAZIBfwE3AdwBzgGjAQoB+wFAAj8BbQME
        AQYMAAFRAU8BSgGRAYMBdwE/AdMDGwEmAawBkQEqAesDBwEKGAADEgEZAYsBfAE9AdcBxQGjARUB9wFR
        AU8BSQGQAzMBUwMEAQYLAAEBAWsBZQFKAboBWwFXAUsBo1QAAYsBewE9AdcDNQFWGAABVQFSAUoBmQHa
        Aa4BAQH/Ax4BKxQAAw8BFAGZAYUBNwHgAjsBOgFjAwsBDwGoAY8BKQHqAx0BKQwAAVgBVQFLAZ4B1AGo
        AQQB/gFLAUoBRwGFAwYBCAQAAx0BKQGnAY4BKAHpAc4BogEKAfsDHwEtCAADBwEJAYEBdgFDAc8BTgFN
        AUgBiwQAAYsBewE9AdcCNgE1AVccAAMKAQ4DLgFIAWMBXgFLAa8BzgGnAQcB/AMqAUEIAAMPARQBmQGF
        ATcB4AI7AToBY1QAAVYBVAFLAZoBeQFvAUcByAMHAQkUAAFWAVQBSwGaAdoBrgEBAf8DHwEsFAACMQEw
        AU0BsAGTASIB7gMSARgEAAFrAWUBSgG6AVwBWgFMAaYDAgEDCAADDwEUAkMBQQF1AwYBCAwAAxsBJgMs
        AUQMAAMiATIBugGaARkB8wMmATgEAAFWAVQBSwGaAXkBbwFHAcgDBwEJHAADCgENAVgBVQFLAZ4BVQFS
        AUoBmQMKAQ0IAAIxATABTQGwAZMBIgHuAxIBGFQAAx0BKgHOAacBBwH8Ay4BRxQAAx8BLAMvAUoDCQEM
        EAADCgENAbcBmQEgAfECQwFBAXQIAAE4AjcBWwG6AZoBGQHzAxwBJzQAAXcBbQFGAcYBaAFiAUsBtggA
        Ax0BKgHOAacBBwH8Ay4BRzAAAwoBDQG3AZkBIAHxAkMBQQF0XAABPgI9AWkBqAGPASkB6gMtAUYoAAMB
        AQIBaAFiAUsBtgF9AXIBQwHNAwwBEAgAAwMBBAFZAVgBTAGhAYsBfAE9AdcDGwEmLAABUAFPAUkBjwGn
        AY4BKAHpAxoBJQwAAT4CPQFpAagBjwEpAeoDLQFGKAADAQECAWgBYgFLAbYBfQFyAUMBzQMMARBcAAME
        AQUBVwFVAUsBmwGnAY4BKAHpAzMBUwMJAQwYAAMBAQIDHwEtAYQBdwE/AdIBiwF6AT0B1gMSARgQAAMN
        ARIBdwFtAUcBxgGLAXoBPQHWAxsBJgMDAQQcAAMPARQBUwFSAUoBlAGwAZQBIAHvAjEBMAFNEAADBAEF
        AVcBVQFLAZsBpwGOASgB6QMzAVMDCQEMGAADAQECAx8BLQGEAXcBPwHSAYsBegE9AdYDEgEYZAADBAEF
        AzoBYQHUAagBBAH+AYEBdgFDAc8BPgI9AWkDEgEYCAADBwEJAyoBQQFjAV8BSwGuAbABkwEiAe4BZQFg
        AUwBsQMSARkYAAMNARIBWgFYAUsBogG5AZsBHQHyAVwBWgFMAaYDHgErAwABAQwAAwoBDgJCAUEBcgGZ
        AYUBNwHgAbQBlgEfAfADKQE+GAADBAEFAjoBOQFgAdQBqAEEAf4BgQF2AUMBzwE+Aj0BaQMSARgIAAMH
        AQkDKgFBAWMBXwFLAa4BsAGTASIB7gFlAWABTAGxAxIBGXAAAxoBJAFRAU8BSgGRAX0BcQFEAcwBrAGQ
        ASoB6wGcAYgBMgHjAZYBggE3Ad4BqAGPASkB6gGSAX8BNwHcAWMBXgFMAbADMwFSJAADBAEFATgCNwFb
        AWwBZgFLAbsBpgGOASgB6QGMAXwBPQHYAWoBZAFMAbcBYwFeAUsBrwF8AXEBRgHJAagBjwEpAeoBggF2
        AUEB0QFOAU0BSAGKAwsBDyQAAxoBJAFRAU8BSgGRAX0BcQFEAcwBrAGQASoB6wGcAYgBMgHjAZYBggE3
        Ad4BqAGPASkB6gGSAX8BNwHcAWMBXgFMAbADMwFShAADCgEOAysBQgIzATIBUQMYASI8AAMKAQ4BSgFJ
        AUYBgwGQAYABOwHbAbABlAEgAe8BYwFfAUsBrgMnATo8AAMKAQ4DKwFCAjMBMgFRAxgBInAAAUIBTQE+
        BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcAA/8BAAH8AQMB/wHAAR8B/AEDAfAEAAHwAQAB/wEA
        AQcB8AEAAfAEAAHgAWABfgIHAeABYAFwBAABwwH8ARwBfwHhAcMB/AEQBAABxwGPARgB/wHxAccB/wEQ
        BAACjwEYAccBOAGMAf8BEAQAAo8BiQHCARgBjAE/AYAEAAGfAY8BgQHCARgBnAE/AYAEAAEYAQEBwwHg
        ATwBHAEPAcAEAAE4AQEBwwHwAfwBPgEPAcAEAAE4AQEBwwHgATwBPwEDAcAEAAEfAY8BgQHAARwBHwGB
        AYAEAAGfAY8BgQHCARgBnwHBAYAEAAKPAYgBxwE4AY8B4QGABAACjwEYAf8B+QGPAf8BEAQAAccB/gEY
        AX8B8QHHAf4BEAQAAcEB+AE8AR8BwwHBAfgBMAQAAeABYAF+AgcB4AFgAXAEAAH4AQEB/wEAAQ8B+AEB
        AfAEAAH/AQ8B/wHgAX8B/wEPAfAEAAs=
</value>
  </data>
</root>