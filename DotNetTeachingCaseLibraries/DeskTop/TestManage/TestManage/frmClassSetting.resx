<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilistOpt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilistOpt.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACI
        EAAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGSoAAwgBCwMtAUYDRAF6AVUBVAFPAaIBWgFYAVEBqwJMAUoBjQM4AV4DFgEe
        MAADIAEuAkUBRAF8AWoBZQFQAcMBmQGFATcB5wGmAYwBLAHtAXwBcQFJAdUBUgFRAU4BnAMxAU8DBwEK
        LAADCAELAy0BRgNEAXoBVQFUAU8BogFaAVgBUQGrAkwBSgGNAzgBXgMWAR54AAMJAQwDOAFcAZABfwE8
        AeMBmQGFATIB6AF3AW8BRwHTAV8BWwFRAbMBWgFYAVEBqwFsAWUBTQHHAYkBeQFBAd4BxAGgARQB+QJQ
        AU0BmQMWAR4gAAMWAR8BVQFUAU4BowGxAZUBIAHzAX8BcgFGAdYBVQFUAU8BogNCAXUCPwE+AWwBTAFL
        AUoBjAFqAWUBUAHFAZwBhwEyAeoBggF4AUQB2gMoATwDBAEGHAADCQEMAzgBXAGQAX8BPAHjAZkBhQEy
        AegBdwFvAUcB0wFfAVsBUQGzAVoBWAFRAasBbAFlAU0BxwGJAXkBQQHeAcQBoAEUAfkCUAFNAZkDFgEe
        bAADCgEOAWMBXwFQAbwB2gGuAQAB/wM9AWkDFQEdAwYBCAgAAwMBBAMOARMDJwE6AWgBZAFPAcIBmwGH
        ATIB6QMyAVAYAAMqAUEBlgGDATcB5gF3AW8BSQHRAygBPAMKAQ0DAAEBDAADBAEFAxYBHgJKAUkBiQHH
        AaMBEAH6AUwBSwFKAYwYAAMKAQ4BYwFfAVABvAHaAa4BAAH/Az0BaQMVAR0DBgEICAADAwEEAw4BEwMn
        AToBaAFkAU8BwgGbAYcBMgHpAzIBUGQAAxABFgF2AW4BTAHPAWYBYwFQAb8DFgEeIAADCAELAkcBRgGA
        AZwBhwEyAeoCNQE0AVUDAAEBDAADJAE1AaIBjAEvAewCUAFNAZkoAAMxAU8BmQGGATcB5wJMAUoBjQME
        AQYMAAMQARYBdgFuAUwBzwFoAWIBTgHAAxYBHiAAAwgBCwJHAUYBgAGcAYcBMgHqAjUBNAFVAwABAVwA
        AV0BWwFRAbEBhQF4AUUB2wMEAQYQAAMKAQ4DEgEYAwMBBBAAAkUBRAF8AaUBjAEqAe4DGAEiCAADBgEI
        AaEBjAEvAewCVAFPAaEwAAIxATABTQHKAZ8BDAH7AykBPwwAAV0BWwFRAbEBhQF4AUUB2wMEAQYsAAJF
        AUQBfAGlAYwBKgHuAxgBIlgAAjYBNQFYAaYBjAEsAe0DHwEtFAACUAFNAZcBywGkAQgB/AMeASsQAAME
        AQYBXgFcAVABsgFcAVoBUAGwCAADRwGCAYwBfgE8AeEDEAEWCAADBAEGAzkBXwMFAQcMAAMSARkDKwFC
        DAACRwFGAYEBhwF5AT4B3wMIAQsEAAI2ATUBWAGmAYwBLAHtAx8BLQgAAwwBEAMAAQEgAAMEAQYBXgFc
        AVABsgFcAVoBUAGwWAABXgFcAVEBtAFZAVcBTwGoAwABARQAAlABTQGZAdoBrgEAAf8DHgErFAADHQEq
        AbcBlwEaAfUDIAEvBAABdgFuAUwBzwNEAXoMAAFMAUsBSgGMAcsBpAEIAfwDQgF1AwQBBgQAAxIBGQF6
        AXIBSAHUAc8BqgEIAf0CIgEhATEIAAMVAR0BmwGFATIB6QM1AVcEAAFeAVwBUQG0AVkBVwFPAagDAAEB
        CAABYgFfAVABugMVAR0DGgEkAwEBAhwAAx0BKgG3AZcBGgH1AyABL1QAAZIBgQE6AeQDIwEzGAACUAFN
        AZgB2gGuAQAB/wMeASsUAAMIAQsBfwFyAUYB1gNDAXcCIgEhATEBpQGMASoB7gMLAQ8MAAMaASUBkAF/
        ATwB4wHLAaQBCAH8A0gBhAQAAXIBawFNAcsBzgGpAQgB/QJFAUQBewMGAQgIAAMBAQIBZQFhAVEBvQFZ
        AVcBTwGoBAABkgGBAToB5AMjATMMAAMMARADQgF2AakBjwElAfADQAFwHAADCAELAX8BcgFGAdYDQwF3
        UAADKgFBAZgBgwE3AeYDAQECCAADIwEzAy8BSgMvAUoDLwFKAV8BWwFRAbMB2gGuAQAB/wM8AWYDLwFK
        Ay8BSgMsAUQMAAFZAVcBTwGpAV4BXQFQAbUBWAFWAVABpwFyAWsBTQHLFAADGgEkAYABcwFGAdgBwAGd
        ARcB+AF9AXQBRgHXAccBpAEQAfoBTQFMAUsBjgMFAQcQAAJGAUUBfgGQAX8BPAHjAyoBQQGYAYMBNwHm
        AwEBAgwAAw0BEQF4AW4BSQHSAdoBrgEAAf8BvwGfARkB9wI/AT4BbAMEAQYYAAFZAVcBTwGoAV4BXQFQ
        AbVQAAJFAUQBewF3AW8BSQHRDAABYwFfAVABvAHaAa4BAAH/AdoBrgEAAf8B2gGuAQAB/wHaAa4BAAH/
        AdoBrgEAAf8B2gGuAQAB/wHaAa4BAAH/AdoBrgEAAf8BpQGMASoB7gwAAkkBSAGHAXcBbwFJAdEBmwGH
        ATIB6QFdAVsBUQGxGAADDgETAcIBnQEXAfgB2gGuAQAB/wFTAVIBTQGeGAADNwFbAdIBpgEEAf4CRQFE
        AXsBeAFtAUkB0hQAAxABFQGMAX4BPAHhAdoBrgEAAf8B2gGuAQAB/wNDAXgYAAJJAUgBhwF3AW8BSQHR
        UAACPwE+AWwBgAFzAUYB2AwAAy4BRwM9AWkDPQFpAj0BPAFoAWoBZQFQAcMB2gGuAQAB/wJHAUYBgQM9
        AWkDPQFpAzkBXwwAAU4BTQFLAZABcgFrAU0BywGAAXMBRgHYAWEBXwFSAbcUAAMQARUBbAFmAU4BxgHH
        AaQBEAH6AZwBhwEyAeoBvwGfARkB9wJHAUYBgQMEAQUQAAM7AWQBvwGgARkB9wI/AT4BbAGAAXMBRgHY
        GAADFgEfAWgBZAFPAcIB2gGuAQAB/wHJAZ4BDAH7AU4BTQFLAZADBAEFEAABTgFNAUsBkAFyAWsBTQHL
        UAADGwEmAaIBiwEzAesDBwEKGAACUAFNAZcB2gGuAQAB/wMdASoXAAEBAWIBXwFQAboBVQFUAU4BowNH
        AYIBgAFzAUYB2AMAAQEMAAMRARcBcgFrAU0BywHSAaYBBAH+AU4BTQFLAZADCgENAYYBeAFBAdwBygGf
        AQwB+wM/AW0DBAEGDAACTQFLAZEBdwFvAUcB0wMbASYBogGLATMB6wMHAQoYAAMSARkBfQF0AUYB1wHA
        AaABGQH3AU4BTQFLAZADMwFTAwQBBgsAAQEBYgFfAVABugFVAVQBTgGjVAABfQFzAUYB1wM1AVYYAAJQ
        AU0BmQHaAa4BAAH/Ax4BKxQAAw8BFAGMAX4BPwHgAzsBYwMLAQ8BnAGHATIB6gMdASkMAAFTAVIBTQGe
        AdIBpgEEAf4CSQFIAYUDBgEIBAADHQEpAZwBhwEyAekBygGeAQwB+wMfAS0IAAMHAQkBdgFuAUwBzwFM
        AUsBSQGLBAABfQFzAUYB1wM1AVccAAMKAQ4DLgFIAVwBWgFPAa8BywGkAQgB/AMqAUEIAAMPARQBjAF+
        AT8B4AM7AWNUAAFSAVEBTgGaAW4BZwFPAcgDBwEJFAABUgFRAU4BmgHaAa4BAAH/Ax8BLBQAAjEBMAFN
        AaUBjAEqAe4DEgEYBAABYgFfAVABugFXAVYBTwGmAwIBAwgAAw8BFANCAXUDBgEIDAADGwEmAywBRAwA
        AyIBMgGxAZUBIAHzAyYBOAQAAVIBUQFOAZoBbgFnAU8ByAMHAQkcAAMKAQ0BUwFSAU0BngJQAU0BmQMK
        AQ0IAAIxATABTQGlAYwBKgHuAxIBGFQAAx0BKgHLAaQBCAH8Ay4BRxQAAx8BLAMvAUoDCQEMEAADCgEN
        Aa8BlAEmAfEDQgF0CAADNwFbAbEBlQEgAfMDHAEnNAABbAFmAU4BxgFfAV0BUQG2CAADHQEqAcsBpAEI
        AfwDLgFHMAADCgENAa8BlAEmAfEDQgF0XAADPQFpAZwBhwEyAeoDLQFGKAADAQECAV8BXQFRAbYBcQFr
        AUwBzQMMARAIAAMDAQQCVAFPAaEBfQF0AUYB1wMbASYsAAJNAUsBjwGcAYcBMgHpAxoBJQwAAz0BaQGc
        AYcBMgHqAy0BRigAAwEBAgFfAV0BUQG2AXEBawFMAc0DDAEQXAADBAEFAlIBTgGbAZwBhwEyAekDMwFT
        AwkBDBgAAwEBAgMfAS0BeAFuAUkB0gF/AXIBRgHWAxIBGBAAAw0BEgFsAWYBTgHGAX8BcgFGAdYDGwEm
        AwMBBBwAAw8BFAJPAUwBlAGnAY4BKAHvAjEBMAFNEAADBAEFAlIBTgGbAZwBhwEyAekDMwFTAwkBDBgA
        AwEBAgMfAS0BeAFuAUkB0gF/AXIBRgHWAxIBGGQAAwQBBQM6AWEB0gGmAQQB/gF2AW4BTAHPAz0BaQMS
        ARgIAAMHAQkDKgFBAVwBWgFPAa4BpQGMASoB7gFdAVsBUQGxAxIBGRgAAw0BEgFVAVQBTwGiAbEBlQEk
        AfIBVwFWAU8BpgMeASsDAAEBDAADCgEOA0EBcgGMAX4BPwHgAakBjwElAfADKQE+GAADBAEFAjoBOQFg
        AdIBpgEEAf4BdgFuAUwBzwM9AWkDEgEYCAADBwEJAyoBQQFcAVoBTwGuAaUBjAEqAe4BXQFbAVEBsQMS
        ARlwAAMaASQCTQFLAZEBcQFpAUwBzAGiAYoBMwHrAZABfwE8AeMBiQF5AUEB3gGcAYcBMgHqAYYBeAFB
        AdwBXAFaAVABsAMzAVIkAAMEAQUDNwFbAWIBYAFQAbsBmwGHATIB6QGAAXMBRgHYAWEBXwFSAbcBXAFa
        AU8BrwFxAWkBTQHJAZwBhwEyAeoBdwFvAUkB0QJLAUkBigMLAQ8kAAMaASQCTQFLAZEBcQFpAUwBzAGi
        AYoBMwHrAZABfwE8AeMBiQF5AUEB3gGcAYcBMgHqAYYBeAFBAdwBXAFaAVABsAMzAVKEAAMKAQ4DKwFC
        AzIBUQMYASI8AAMKAQ4CSAFHAYMBhAF4AUUB2wGnAY4BKAHvAVwBWgFPAa4DJwE6PAADCgEOAysBQgMy
        AVEDGAEicAABQgFNAT4HAAE+AwABKAMAAVADAAEUAwABAQEAAQEFAAHwFwAD/wEAAfwBAwH/AcABHwH8
        AQMB8AQAAfABAAH/AQABBwHwAQAB8AQAAeABYAF+AgcB4AFgAXAEAAHDAfwBHAF/AeEBwwH8ARAEAAHH
        AY8BGAH/AfEBxwH/ARAEAAKPARgBxwE4AYwB/wEQBAACjwGJAcIBGAGMAT8BgAQAAZ8BjwGBAcIBGAGc
        AT8BgAQAARgBAQHDAeABPAEcAQ8BwAQAATgBAQHDAfAB/AE+AQ8BwAQAATgBAQHDAeABPAE/AQMBwAQA
        AR8BjwGBAcABHAEfAYEBgAQAAZ8BjwGBAcIBGAGfAcEBgAQAAo8BiAHHATgBjwHhAYAEAAKPARgB/wH5
        AY8B/wEQBAABxwH+ARgBfwHxAccB/gEQBAABwQH4ATwBHwHDAcEB+AEwBAAB4AFgAX4CBwHgAWABcAQA
        AfgBAQH/AQABDwH4AQEB8AQAAf8BDwH/AeABfwH/AQ8B8AQACw==
</value>
  </data>
</root>